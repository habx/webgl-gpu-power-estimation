{"version":3,"file":"utils.js","sources":["../src/utils.js"],"sourcesContent":["import stringSimilarity from 'string-similarity'\n\nfunction strToCompareArray(str) {\n\n    return str.split(/\\W+/g).map(c => c.trim().toLowerCase());\n\n}\n\nfunction compareStr(a, b) {\n\n    if (typeof a === 'string') a = strToCompareArray(a);\n    if (typeof b === 'string') b = strToCompareArray(b);\n\n    const matched = [];\n    for (let i = 0, l = a.length; i < l; i++) {\n\n        if (b.includes(a[i])) matched.push(a[i]);\n\n    }\n\n\n    const unmatchedTokens = a.length - matched.length + b.length - matched.length;\n    const score = (matched.length / Math.min(a.length, b.length)) - unmatchedTokens * 0.001;\n\n    return score;\n\n}\n\nfunction findMatch_old(name, list) {\n\n    let matches = null;\n    let score = -Infinity;\n\n    const versionMatches = /\\w*\\d\\d\\d+\\w*/.exec(name);\n    let versionRegexp = null;\n    if (versionMatches) {\n        versionRegexp = new RegExp(`(^|\\\\W)${ versionMatches[0] }(\\\\W|$)`, 'i');\n    }\n\n    const gpuArr = strToCompareArray(name);\n    for (let i = 0, l = list.length; i < l; i++) {\n\n        const name = list[i];\n        if (versionRegexp && !versionRegexp.test(name)) continue;\n        if (!versionRegexp && /\\d\\d\\d+/.test(name)) continue;\n\n        const similarity = compareStr(name, gpuArr);\n        if (similarity > score) {\n\n            score = similarity;\n            matches = [name];\n\n        } else if (similarity === score) {\n\n            matches.push(name);\n\n        }\n\n    }\n\n    return { matches, score };\n\n}\n\nfunction findMatch(name, database) {\n\n    let matches = null;\n    let score = -Infinity;\n\n    const versionMatches = /\\w*\\d\\d\\d+\\w*/.exec(name);\n    let versionRegexp = null;\n    if (versionMatches) {\n        versionRegexp = new RegExp(`(^|\\\\W)${ versionMatches[0] }(\\\\W|$)`, 'i');\n    }\n\n    const strippedName = name.replace(/ANGLE( +)?/gi, '').replace(/Direct3d({0-9}+)?( +)?/gi, '').replace(/^\\(/gi, '').replace(/\\)$/gi, '')\n\n    for (let i = 0, l = database.length; i < l; i++) {\n        const gpu = database[i]\n        const names = gpu.names\n\n        names.forEach(gpuName => {\n            if (versionRegexp && !versionRegexp.test(gpuName)) return;\n            if (!versionRegexp && /\\d\\d\\d+/.test(gpuName)) return;\n\n            const newScore = stringSimilarity.compareTwoStrings(gpuName, strippedName);\n\n            if (newScore > score) {    \n                score = newScore;\n                matches = [gpu];\n    \n            } else if (newScore === score) {\n    \n                matches.push(gpu);\n    \n            }\n        });\n\n    }\n\n    return { matches, score };\n\n}\n\nexport { findMatch, findMatch_old };\n"],"names":["strToCompareArray","str","split","map","c","trim","toLowerCase","compareStr","a","b","matched","i","l","length","includes","push","unmatchedTokens","score","Math","min","findMatch_old","name","list","matches","Infinity","versionMatches","exec","versionRegexp","RegExp","gpuArr","test","similarity","findMatch","database","strippedName","replace","gpu","names","forEach","gpuName","newScore","stringSimilarity","compareTwoStrings"],"mappings":"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"}